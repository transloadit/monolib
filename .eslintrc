{
  "extends": [
    "standard",
    "eslint:recommended",
    "plugin:import/errors",
    "plugin:import/warnings"
  ],
  "env": {
    "es6": true,
    "jest": true,
    "node": true
  },
  "settings": {
  },
  "globals": {
  },
  "plugins": [
    "prefer-import"
  ],
  "parser": "babel-eslint",
  "parserOptions": {
  },
  "rules": {
    "prefer-import/prefer-import-over-require": "off",
    "camelcase": "off",
    "no-fallthrough": "off",
    "no-console": "off",
    // "no-unused-vars": "off",
    "no-useless-escape": "off",
    "no-template-curly-in-string": "off",
    "no-multi-spaces": "off",
    "no-multi-str": "off",
    "quotes": [
      "error",
      "single",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "comma-dangle": [
      "error",
      {
        "arrays": "always-multiline",
        "objects": "always-multiline",
        "imports": "never",
        "exports": "never",
        "functions": "never"
      }
    ],
    "key-spacing": [
      "error",
      {
        "multiLine": {
          "beforeColon": false,
          "afterColon": true
        },
        "align": {
          "beforeColon": false,
          "afterColon": true,
          "on": "colon",
          "mode": "strict"
        }
      }
    ],
    // Primarily for the
    // ifSmth ?
    //   <div props props/> :
    //   <spam props props/>
    // syntax to look symmetrical.
    "operator-linebreak": [ "error", "after" ],
    // Can't find a way to enable beautiful <>{(closeModal) => }</> indentation :-/
    // "indent": ["error", 2, {"FunctionExpression": { "body": 0 }}]

    // Because
    //   const ifReadOnly = this.props.credential ? true : false
    // may be easier to parse than
    //   const ifReadOnly = !!this.props.credential
    "no-unneeded-ternary": "off",

    // It's true that we'd generally like to use object.property, but this.state.formState is usually better read when we read this.state.formState['property'].
    "dot-notation": "off"
  }
}
